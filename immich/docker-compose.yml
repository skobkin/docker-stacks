#
# WARNING: Make sure to use the docker-compose.yml of the current release:
#
# https://github.com/immich-app/immich/releases/latest/download/docker-compose.yml
#
# The compose file on main may not be compatible with the latest release.
#

name: immich

services:
  immich-server:
    container_name: immich_server
    image: 'ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}'
    extends:
      file: 'hwaccel.transcoding.yml'
      service: '${HWACCEL_TRANSCODING:-cpu}' # set to one of [nvenc, quicksync, rkmpp, vaapi, vaapi-wsl] for accelerated transcoding
    volumes:
      # Do not edit the next line. If you want to change the media storage location on your system, edit the value of UPLOAD_LOCATION in the .env file
      - '${UPLOAD_LOCATION:-./upload}:/usr/src/app/upload'
      - '/etc/localtime:/etc/localtime:ro'
    env_file:
      -   .env
    ports:
      - '${BIND_ADDRESS:-127.0.0.1}:${BIND_PORT:-2283}:2283'
    depends_on:
      - redis
      - database
    restart: unless-stopped
#    healthcheck:
#      disable: false
    logging:
      driver: 'json-file'
      options:
        max-size: '${LOG_MAX_SIZE:-5m}'
        max-file: '${LOG_MAX_FILE:-5}'

  immich-machine-learning:
    container_name: immich_machine_learning
    # For hardware acceleration, add one of -[armnn, cuda, openvino] to the image tag.
    # Example tag: ${IMMICH_VERSION:-release}-cuda
    image: 'ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}'
    extends: # uncomment this section for hardware acceleration - see https://immich.app/docs/features/ml-hardware-acceleration
      file: 'hwaccel.ml.yml'
      service: '${HWACCEL_ML:-cpu}' # set to one of [armnn, cuda, openvino, openvino-wsl] for accelerated inference - use the `-wsl` version for WSL2 where applicable
    volumes:
      - '${MODEL_CACHE_LOCATION:-./model-cache}:/cache'
    env_file:
      - .env
    restart: unless-stopped
#    healthcheck:
#      disable: false
    logging:
      driver: 'json-file'
      options:
        max-size: '${LOG_MAX_SIZE:-5m}'
        max-file: '${LOG_MAX_FILE:-5}'

  redis:
    container_name: immich_redis
    image: 'docker.io/redis:6.2-alpine@sha256:2ba50e1ac3a0ea17b736ce9db2b0a9f6f8b85d4c27d5f5accc6a416d8f42c6d5'
    healthcheck:
      test: redis-cli ping || exit 1
    restart: unless-stopped
    logging:
      driver: 'json-file'
      options:
        max-size: '${LOG_MAX_SIZE:-5m}'
        max-file: '${LOG_MAX_FILE:-5}'

  database:
    container_name: immich_postgres
    image: 'ghcr.io/immich-app/postgres:14-vectorchord0.4.3@sha256:da52bbead5d818adaa8077c8dcdaad0aaf93038c31ad8348b51f9f0ec1310a4d'
    extends:
      file: 'share_db.yaml'
      service: '${DB_MODE:-internal}' # set to one of [shared, internal]
    environment:
      POSTGRES_PASSWORD: '${DB_PASSWORD}'
      POSTGRES_USER: '${DB_USERNAME}'
      POSTGRES_DB: '${DB_DATABASE_NAME}'
      POSTGRES_INITDB_ARGS: '--data-checksums'
      # Uncomment the DB_STORAGE_TYPE: 'HDD' var if your database isn't stored on SSDs
      # DB_STORAGE_TYPE: 'HDD'
    volumes:
      - '${DB_DATA_LOCATION:-./db}:/var/lib/postgresql/data'
    shm_size: 128mb
    restart: unless-stopped
    logging:
      driver: 'json-file'
      options:
        max-size: '${LOG_MAX_SIZE:-5m}'
        max-file: '${LOG_MAX_FILE:-5}'
